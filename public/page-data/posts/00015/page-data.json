{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/00015","result":{"data":{"markdownRemark":{"id":"223753ad-b511-5169-aa75-3d5ed9fc6957","html":"<h2 id=\"導入\" style=\"position:relative;\"><a href=\"#%E5%B0%8E%E5%85%A5\" aria-label=\"導入 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>導入</h2>\n<p>本記事では、Azureが提供しているAPI Managementサービスに、ローカル環境のAPIサーバを追加して動作確認した方法を紹介します。</p>\n<h2 id=\"目次\" style=\"position:relative;\"><a href=\"#%E7%9B%AE%E6%AC%A1\" aria-label=\"目次 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>目次</h2>\n<ol>\n<li>事前準備</li>\n<li>\n<p>サンプルAPIサーバの設定</p>\n<ol>\n<li>サンプルAPIサーバを作成する</li>\n<li>サンプルAPIサーバを起動する</li>\n</ol>\n</li>\n<li>\n<p>ngrokの設定</p>\n<ol>\n<li>ngrokのインストール</li>\n<li>ngrokを起動する</li>\n</ol>\n</li>\n<li>OpenAPI Specificationの作成</li>\n<li>サンプルAPIの登録</li>\n<li>サンプルAPIのテスト</li>\n<li>エラーレスポンスの確認</li>\n</ol>\n<h2 id=\"事前準備\" style=\"position:relative;\"><a href=\"#%E4%BA%8B%E5%89%8D%E6%BA%96%E5%82%99\" aria-label=\"事前準備 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>事前準備</h2>\n<p>Azure API Managementが利用できる状態である必要があります。<br>\nまだの方は<a href=\"/posts/00014\">こちら</a>等を参照し、環境を準備してください。  </p>\n<h2 id=\"サンプルapiサーバの設定\" style=\"position:relative;\"><a href=\"#%E3%82%B5%E3%83%B3%E3%83%97%E3%83%ABapi%E3%82%B5%E3%83%BC%E3%83%90%E3%81%AE%E8%A8%AD%E5%AE%9A\" aria-label=\"サンプルapiサーバの設定 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>サンプルAPIサーバの設定</h2>\n<h3 id=\"サンプルapiサーバを作成する\" style=\"position:relative;\"><a href=\"#%E3%82%B5%E3%83%B3%E3%83%97%E3%83%ABapi%E3%82%B5%E3%83%BC%E3%83%90%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B\" aria-label=\"サンプルapiサーバを作成する permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>サンプルAPIサーバを作成する</h3>\n<p>今回は<a href=\"https://sbfl.net/blog/2018/08/25/nodejs-express-webapi/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">こちらのブログ</a>で紹介している手順でAPIサーバを作成しました。  </p>\n<p><code class=\"language-text\">http://localhost:3000/api/v1/list</code>にアクセスすると、<code class=\"language-text\">{&quot;title&quot;:&quot;JavaScriptを勉強する&quot;,&quot;done&quot;:true}</code>が返却される簡単な仕様です。  </p>\n<p>index.jsの実装は以下の通りです。  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// expressモジュールを読み込む</span>\n<span class=\"token keyword\">const</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// expressアプリを生成する</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// http://localhost:3000/api/v1/list にアクセスしてきたときに</span>\n<span class=\"token comment\">// TODOリストを返す</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/v1/list'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// クライアントに送るJSONデータ</span>\n    <span class=\"token keyword\">const</span> todoList <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> title<span class=\"token operator\">:</span> <span class=\"token string\">'JavaScriptを勉強する'</span><span class=\"token punctuation\">,</span> done<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// JSONを送信する</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>todoList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ポート3000でサーバを立てる</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Listening on port 3000'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"サンプルapiサーバを起動する\" style=\"position:relative;\"><a href=\"#%E3%82%B5%E3%83%B3%E3%83%97%E3%83%ABapi%E3%82%B5%E3%83%BC%E3%83%90%E3%82%92%E8%B5%B7%E5%8B%95%E3%81%99%E3%82%8B\" aria-label=\"サンプルapiサーバを起動する permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>サンプルAPIサーバを起動する</h3>\n<p>アプリケーションを起動すると、、ローカルホスト3000で待ち受け状態になるので、ブラウザで確認します。  </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">rui@ruinoMacBook-Pro express-app % node index.js\nListening on port <span class=\"token number\">3000</span></code></pre></div>\n<p>以下のように表示されたらサンプルAPIの準備は完了です。<br>\nAPIサーバは起動したままにしておきます。<br>\n<img src=\"../media/00015/ScreenShot%202020-09-19%2018.53.13.png\" alt=\"ScreenShot 2020-09-19 18.53.13.png\"></p>\n<h2 id=\"ngrokの設定\" style=\"position:relative;\"><a href=\"#ngrok%E3%81%AE%E8%A8%AD%E5%AE%9A\" aria-label=\"ngrokの設定 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ngrokの設定</h2>\n<p>サンプルAPIですが、現在ローカルホストで起動しているかと思います。<br>\nしかし、Azure API Managementにhostが<code class=\"language-text\">localhost</code>となるAPIを登録してもエラーとなります。<br>\nこれはAzure内のローカル環境を指すことになってしまうためです。  </p>\n<p>そこで<a href=\"https://ngrok.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ngrok</a>というツールを利用します。<br>\nngrokとはwebhookを利用するためのpublicURLを発行できるツールです。  </p>\n<blockquote>\n<p>Public URLs for building webhook integrations.\nSpend more time programming. One command for an instant, secure URL to your localhost server through any NAT or firewall.<br>\n引用元：<a href=\"https://ngrok.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://ngrok.com/</a></p>\n</blockquote>\n<h4 id=\"参考資料\" style=\"position:relative;\"><a href=\"#%E5%8F%82%E8%80%83%E8%B3%87%E6%96%99\" aria-label=\"参考資料 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考資料</h4>\n<ul>\n<li><a href=\"https://qiita.com/kitaro0729/items/44214f9f81d3ebda58bd\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ngrokを使用してローカル環境を外部に公開する</a></li>\n<li><a href=\"https://qiita.com/hirokisoccer/items/7033c1bb9c85bf6789bd\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ngrokの利用方法</a></li>\n</ul>\n<h3 id=\"ngrokのインストール\" style=\"position:relative;\"><a href=\"#ngrok%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\" aria-label=\"ngrokのインストール permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ngrokのインストール</h3>\n<p>macの場合、Homebrewが入っていれば簡単に導入できます。<br>\n※Windowsであればzipファイルを解凍するだけで利用できます。  </p>\n<p><code class=\"language-text\">brew install ngrok</code><br>\nコマンドではエラーとなったので、<br>\n<code class=\"language-text\">brew cask install ngrok</code><br>\nコマンドを実行しました。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">//実行ログ\nrui@ruinoMacBook-Pro ~ % brew <span class=\"token function\">install</span> ngrok\nUpdating Homebrew<span class=\"token punctuation\">..</span>.\n<span class=\"token operator\">==</span><span class=\"token operator\">></span> Auto-updated Homebrew<span class=\"token operator\">!</span>\nUpdated <span class=\"token number\">1</span> tap <span class=\"token punctuation\">(</span>homebrew/core<span class=\"token punctuation\">)</span>.\n<span class=\"token operator\">==</span><span class=\"token operator\">></span> New Formulae\nalsa-lib           dbdeployer         infracost          ladspa-sdk         libirecovery       libseccomp         prometheus-cpp     terrascan          vtk@8.2\n<span class=\"token operator\">==</span><span class=\"token operator\">></span> Updated Formulae\nUpdated <span class=\"token number\">457</span> formulae.\n<span class=\"token operator\">==</span><span class=\"token operator\">></span> Renamed Formulae\ngst-validate -<span class=\"token operator\">></span> gst-devtools\n\nError: No available formula with the name <span class=\"token string\">\"ngrok\"</span> \nUpstream sunsetted <span class=\"token number\">1</span>.x <span class=\"token keyword\">in</span> March <span class=\"token number\">2016</span> and <span class=\"token number\">2</span>.x is not open-source.\n\nIf you wish to use the <span class=\"token number\">2</span>.x release you can <span class=\"token function\">install</span> with Homebrew Cask:\n  brew cask <span class=\"token function\">install</span> ngrok\nrui@ruinoMacBook-Pro ~ % \nrui@ruinoMacBook-Pro ~ % \nrui@ruinoMacBook-Pro ~ % brew cask <span class=\"token function\">install</span> ngrok\n<span class=\"token operator\">==</span><span class=\"token operator\">></span> Tapping homebrew/cask\nCloning into <span class=\"token string\">'/usr/local/Homebrew/Library/Taps/homebrew/homebrew-cask'</span><span class=\"token punctuation\">..</span>.\nremote: Enumerating objects: <span class=\"token number\">33</span>, done.\nremote: Counting objects: <span class=\"token number\">100</span>% <span class=\"token punctuation\">(</span><span class=\"token number\">33</span>/33<span class=\"token punctuation\">)</span>, done.\nremote: Compressing objects: <span class=\"token number\">100</span>% <span class=\"token punctuation\">(</span><span class=\"token number\">30</span>/30<span class=\"token punctuation\">)</span>, done.\nremote: Total <span class=\"token number\">480321</span> <span class=\"token punctuation\">(</span>delta <span class=\"token number\">12</span><span class=\"token punctuation\">)</span>, reused <span class=\"token number\">7</span> <span class=\"token punctuation\">(</span>delta <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>, pack-reused <span class=\"token number\">480288</span>\nReceiving objects: <span class=\"token number\">100</span>% <span class=\"token punctuation\">(</span><span class=\"token number\">480321</span>/480321<span class=\"token punctuation\">)</span>, <span class=\"token number\">216.93</span> MiB <span class=\"token operator\">|</span> <span class=\"token number\">1.31</span> MiB/s, done.\nResolving deltas: <span class=\"token number\">100</span>% <span class=\"token punctuation\">(</span><span class=\"token number\">340760</span>/340760<span class=\"token punctuation\">)</span>, done.\nTapped <span class=\"token number\">1</span> <span class=\"token builtin class-name\">command</span> and <span class=\"token number\">3659</span> casks <span class=\"token punctuation\">(</span><span class=\"token number\">3,776</span> files, <span class=\"token number\">232</span>.5MB<span class=\"token punctuation\">)</span>.\n<span class=\"token operator\">==</span><span class=\"token operator\">></span> Downloading https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-darwin-amd64.zip\n<span class=\"token comment\">######################################################################## 100.0%</span>\n<span class=\"token operator\">==</span><span class=\"token operator\">></span> No SHA-256 checksum defined <span class=\"token keyword\">for</span> Cask <span class=\"token string\">'ngrok'</span>, skipping verification.\n<span class=\"token operator\">==</span><span class=\"token operator\">></span> Installing Cask ngrok\n<span class=\"token operator\">==</span><span class=\"token operator\">></span> Linking Binary <span class=\"token string\">'ngrok'</span> to <span class=\"token string\">'/usr/local/bin/ngrok'</span><span class=\"token builtin class-name\">.</span>\n🍺  ngrok was successfully installed<span class=\"token operator\">!</span>\nrui@ruinoMacBook-Pro ~ % </code></pre></div>\n<h3 id=\"ngrokを起動する\" style=\"position:relative;\"><a href=\"#ngrok%E3%82%92%E8%B5%B7%E5%8B%95%E3%81%99%E3%82%8B\" aria-label=\"ngrokを起動する permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ngrokを起動する</h3>\n<p>ngrokを起動していきましょう。<br>\n今回のexpress APIサーバであれば3000ポートを使うので、以下コマンドを実行します。  </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">rui@ruinoMacBook-Pro ~ % ngrok http <span class=\"token number\">3000</span></code></pre></div>\n<p>実行すると、ターミナルの表示が以下のように変わるかと思います。  </p>\n<p><img src=\"../media/00015/ScreenShot%202020-09-19%2019.02.57.png\" alt=\"ScreenShot 2020-09-19 19.02.57.png\"></p>\n<p>このうちorwardingに書かれているのは、<br>\n<code class=\"language-text\">http://64e22898a87d.ngrok.io</code><br>\nにアクセスすれば、<br>\n<code class=\"language-text\">http://localhost:3000</code><br>\nにアクセスできるというものです。<br>\n※転送処理をしてくれます  </p>\n<p>この<code class=\"language-text\">http://64e22898a87d.ngrok.io</code>をAzure API Managementサービスに登録することで、ローカルのAPIサーバと通信できるようにします。<br>\nngrokも起動したままにしておきます。  </p>\n<h2 id=\"openapi-specificationの作成\" style=\"position:relative;\"><a href=\"#openapi-specification%E3%81%AE%E4%BD%9C%E6%88%90\" aria-label=\"openapi specificationの作成 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OpenAPI Specificationの作成</h2>\n<p>Azure API ManagementにAPIを登録するため、OpenAPI Specificationを作成します。<br>\nOpenAPI Speficification とは、APIを記述するためのフォーマットのことで、Open API Initiativeによって推進されてるオープンな規格です。  </p>\n<p>ここでは詳細は記載しませんので、下記資料等を参照し、作成してください、  </p>\n<h4 id=\"参考資料-1\" style=\"position:relative;\"><a href=\"#%E5%8F%82%E8%80%83%E8%B3%87%E6%96%99-1\" aria-label=\"参考資料 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考資料</h4>\n<ul>\n<li><a href=\"https://qiita.com/teinen_qiita/items/e440ca7b1b52ec918f1b\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">OpenAPI (Swagger) 超入門</a></li>\n<li><a href=\"https://qiita.com/rllllho/items/53a0023b32f4c0f8eabb\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Swaggerの記法まとめ</a></li>\n</ul>\n<p>今回は<a href=\"https://editor.swagger.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Swagger UI</a>を使って作成しました。<br>\n※登録不要で作成できるのでとても便利です。  </p>\n<p>作成したOpenAPI Specificationは以下の通りです。<br>\nポイントはhostに <code class=\"language-text\">64e22898a87d.ngrok.io</code> を設定している点です。  </p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">swagger</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"2.0\"</span>\n<span class=\"token key atrule\">info</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"これはサンプルAPIです。\"</span>\n  <span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"1.0.0\"</span>\n  <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Sample API\"</span>\n  <span class=\"token key atrule\">termsOfService</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"http://swagger.io/terms/\"</span>\n  <span class=\"token key atrule\">contact</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">email</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"apiteam@swagger.io\"</span>\n  <span class=\"token key atrule\">license</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Apache 2.0\"</span>\n    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"http://www.apache.org/licenses/LICENSE-2.0.html\"</span>\n<span class=\"token key atrule\">host</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"64e22898a87d.ngrok.io\"</span>\n<span class=\"token key atrule\">basePath</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"/api/v1\"</span>\n<span class=\"token key atrule\">paths</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">/list</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">get</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">summary</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"サンプルAPI\"</span>\n      <span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"サンプルの情報を返します\"</span>\n      <span class=\"token key atrule\">responses</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">200</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"成功時のレスポンス\"</span>\n          <span class=\"token key atrule\">schema</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"object\"</span>\n            <span class=\"token key atrule\">properties</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"string\"</span>\n                <span class=\"token key atrule\">example</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"JavaScriptを勉強する\"</span>\n              <span class=\"token key atrule\">done</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"boolean\"</span>\n                <span class=\"token key atrule\">example</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></code></pre></div>\n<h2 id=\"apiの登録\" style=\"position:relative;\"><a href=\"#api%E3%81%AE%E7%99%BB%E9%8C%B2\" aria-label=\"apiの登録 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>APIの登録</h2>\n<p>続いてAzure API ManagementサービスにAPIを登録していきます。  </p>\n<p>[Add API] -> [OpenAPI] を選択します。<br>\n<img src=\"../media/00015/ScreenShot%202020-09-19%2019.17.01.png\" alt=\"ScreenShot 2020-09-19 19.17.01.png\"></p>\n<p>[Select a file] から上記で作成したOpenAPI Specification（ここではswagger.yaml）を選択します。<br>\n他の設定はデフォルトのままで「create」を押下します。<br>\n<img src=\"../media/00015/ScreenShot%202020-09-19%2019.17.32.png\" alt=\"ScreenShot 2020-09-19 19.17.32.png\"></p>\n<h2 id=\"apiの実行\" style=\"position:relative;\"><a href=\"#api%E3%81%AE%E5%AE%9F%E8%A1%8C\" aria-label=\"apiの実行 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>APIの実行</h2>\n<p>[Test]タブ -> [サンプルAPI]を選択 -> [Send] を押下します。<br>\n<img src=\"../media/00015/ScreenShot%202020-09-19%2019.21.46.png\" alt=\"ScreenShot 2020-09-19 19.21.46.png\"></p>\n<p>200でレスポンスが返ってきたら成功です。<br>\n<img src=\"../media/00015/ScreenShot%202020-09-19%2019.23.19.png\" alt=\"ScreenShot 2020-09-19 19.23.19.png\"></p>\n<h4 id=\"httpレスポンス\" style=\"position:relative;\"><a href=\"#http%E3%83%AC%E3%82%B9%E3%83%9D%E3%83%B3%E3%82%B9\" aria-label=\"httpレスポンス permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTTPレスポンス</h4>\n<div class=\"gatsby-highlight\" data-language=\"md\"><pre class=\"language-md\"><code class=\"language-md\">HTTP/1.1 200 OK\n\ncache-control: private\ncontent-encoding: gzip\ncontent-type: application/json; charset=utf-8\ndate: Sat, 19 Sep 2020 10:22:26 GMT\netag: W/\"31-utjlEvoAJ2bDixOZRVKHEYHfVpc\"\nocp-apim-trace-location: https://apimstrvh1epexidsgscyqls.blob.core.windows.net/apimstbowbjbbkitkmaerfbd-inspector/Aocskp-0vkM0tCpNpfTFBg2-1?sv=2018-03-28&amp;sr=c&amp;sig=0yHVqER3qaUFRDHaWycBph1PD%2Fx9pI0UrHDhnDXpmGY%3D&amp;se=2021-09-19T03%3A00%3A49Z&amp;sp=racwdl&amp;traceId=b7fe4e6a12524ddb838482c55e62e40c\ntransfer-encoding: chunked\nvary: Accept-Encoding,Origin\nx-powered-by: Express\n{\n    \"title\": \"JavaScriptを勉強する\",\n    \"done\": true\n}</code></pre></div>\n<h2 id=\"エラーレスポンスの確認\" style=\"position:relative;\"><a href=\"#%E3%82%A8%E3%83%A9%E3%83%BC%E3%83%AC%E3%82%B9%E3%83%9D%E3%83%B3%E3%82%B9%E3%81%AE%E7%A2%BA%E8%AA%8D\" aria-label=\"エラーレスポンスの確認 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>エラーレスポンスの確認</h2>\n<p>検証として、OpenAPI Specificationのhostの値を<br>\n<code class=\"language-text\">64e22898a87d.ngrok.io</code><br>\nから<br>\n<code class=\"language-text\">localhost:3000</code><br>\nに変更した時の挙動を確認しましょう。  </p>\n<p>API名が重複するので、一度「Sample API」は削除します。<br>\n修正したyamlファイルを再登録します。  </p>\n<p>同様の手順でAPIを実行すると、500エラーとなることが確認できます。<br>\n<img src=\"../media/00015/ScreenShot%202020-09-19%2019.33.39.png\" alt=\"ScreenShot 2020-09-19 19.33.39.png\"></p>\n<h4 id=\"httpレスポンス-1\" style=\"position:relative;\"><a href=\"#http%E3%83%AC%E3%82%B9%E3%83%9D%E3%83%B3%E3%82%B9-1\" aria-label=\"httpレスポンス 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTTPレスポンス</h4>\n<div class=\"gatsby-highlight\" data-language=\"md\"><pre class=\"language-md\"><code class=\"language-md\">HTTP/1.1 500 Internal Server Error\n\ncache-control: private\ncontent-length: 111\ncontent-type: application/json\ndate: Sat, 19 Sep 2020 10:33:30 GMT\nocp-apim-trace-location: https://apimstrvh1epexidsgscyqls.blob.core.windows.net/apimstbowbjbbkitkmaerfbd-inspector/Aocskp-0vkM0tCpNpfTFBg2-2?sv=2018-03-28&amp;sr=c&amp;sig=0yHVqER3qaUFRDHaWycBph1PD%2Fx9pI0UrHDhnDXpmGY%3D&amp;se=2021-09-19T03%3A00%3A49Z&amp;sp=racwdl&amp;traceId=67c484097e224d44a1dfa3757fab5679\nvary: Origin\n{\n    \"statusCode\": 500,\n    \"message\": \"Internal server error\",\n    \"activityId\": \"67c48409-7e22-4d44-a1df-a3757fab5679\"\n}</code></pre></div>\n<p>以上で検証は終了です。  </p>","fields":{"slug":"/posts/00015","tagSlugs":["/tag/プログラミング学習/","/tag/プログラミング初心者/"]},"frontmatter":{"date":"2020-09-19","description":"本記事では、Azureが提供しているAPI Managementサービスに、ローカル環境のAPIサーバを追加して動作確認した方法を紹介します。","tags":["プログラミング学習","プログラミング初心者"],"title":"ローカルのAPIサーバをAzure API Managementに登録する","socialImage":null}}},"pageContext":{"slug":"/posts/00015"}},"staticQueryHashes":["251939775","3159585216","3942705351","401334301"]}